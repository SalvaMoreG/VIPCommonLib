sources = $(wildcard src/*.cc)
objects = $(subst src/,tmp/,$(patsubst %.cc,%.o,$(sources)))
exec = $(subst src/,bin/,$(subst .cxx,,$(wildcard src/*.cxx)))

outlib = ./lib/libVIPcommonlib.a

CC = g++
LOCAL_INC = -Iinclude/

ROOTLIBS = ${VIPHOMEROOTLIBS}
ROOTINCDIR = ${VIPHOMEROOTINCDIR}

INCFLAGS = $(LOCAL_INC) -isystem$(ROOTINCDIR) -std=c++11

LDFLAGS = $(LOCAL_INC) -std=c++11

FFTWFLAGS = -lfftw3 -lm 

ADDITIONAL_FLAG = -std=c++11

all: $(objects) $(exec) $(outlib)
	@echo all done!

$(objects): tmp/%.o: src/%.cc  
	@echo compiling $@
	@$(CC) -c $(INCFLAGS) $(ADDITIONAL_FLAG) $< -o $@ 

$(exec): bin/% : src/%.cxx $(objects)
	@echo compiling $@
	@$(CC) $(INCFLAGS) $< $(objects)  -o $@ $(LDFLAGS) $(ROOTLIBS)
	@echo $(@F) compiled.

libobj = tmp/CVIP3Matrix.o tmp/CVIP3Vector.o tmp/CVIPUtils.o tmp/CVIPHit.o tmp/CVIPEvent.o tmp/CVIPFieldOfView.o \
		tmp/CVIPPhysicsUtils.o tmp/CVIPDetector.o tmp/CVIPWildermanUtils.o tmp/CVIPImage.o tmp/CVIPSemiConductorEnergy.o \
		tmp/CVIPVector.o tmp/CVIPImageKernel.o tmp/CVIPBaseLor.o tmp/CVIPBaseCone.o tmp/CVIPMapData.o \
		tmp/CVIPQetirData.o tmp/CVIPListModeDataOperations.o tmp/CVIPGeometry.o \
		tmp/CVIPGaussianElimination.o tmp/CVIPMatrix.o tmp/CVIPVector.o tmp/CVIPRandom.o tmp/MyGmDataTree.o

$(outlib): $(libobj)
	ar rcs $(outlib) $(libobj)
	ranlib $(outlib)
	ar tv $(outlib)

$(notdir $(exec)): % : bin/%

$(notdir $(objects)):%:tmp/%

tmp/cc_%.d: src/%.cc 
	@$(CC) -MM $(INCFLAGS) $< | sed 's:$*\.o[ \:]:tmp/& $@:g' >  $@

tmp/cxx_%.d: src/%.cxx
	@$(CC) -MM $(INCFLAGS) $< | sed 's:\.o::g' | sed 's:$*[ \:]:bin/& $@:g'  > $@

.PHONY: nobin
nobin: $(objects)

.PHONY: bin
bin: $(exec)

.PHONY: clean
clean:
	@-rm tmp/*.o tmp/*.d bin/* lib/* &> /dev/null

